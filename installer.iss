; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "InfluxDB"
#define MyAppVersion "1.0"
#define MyAppPublisher "My Company, Inc."
#define MyAppURL "https://github.com/influxdata/influxdb"
#define MyAppExeName "influxd.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6C34FD58-6D9B-4B0C-9FFE-0A9A7309B484}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\work\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=output
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Files]
Source: "module\influx.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\influx_inspect.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\influx_stress.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\influx_tsm.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\influxd.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\influxdb.conf"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: WriteHomePaths('{app}\influxdb.conf')
Source: "module\nssm.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\shell.bat"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: WriteHomePath('{app}\shell.bat')
Source: "module\run.bat"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: WriteHomePath('{app}\run.bat')
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
;Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Run] 
Filename: "{app}\nssm.exe"; Parameters: "install {#MyAppName} {app}\influxd.exe -config {app}\influxdb.conf"; Flags: runhidden
Filename: "{app}\nssm.exe"; Parameters: "set {#MyAppName} AppDirectory {app}"; Flags: runhidden
Filename: "{app}\nssm.exe"; Parameters: {code:GetNssmParameter}; Flags: runhidden

[UninstallRun]
Filename: "{app}\nssm.exe"; Parameters: "remove {#MyAppName}"; Flags: runhidden

[Code]
function GetHomePath():AnsiString;
var
  str: String;
begin
  str := ExpandConstant('{app}');
  StringChangeEx( str, '\', '/', True );
  Result := str;
  //Log(Result);
end;

function GetNssmParameter(S: String):String;
begin
  Result := ExpandConstant('set {#MyAppName} AppEnvironmentExtra HOME=') + GetHomePath();
  Log(Result);
end;

procedure WriteHomePath(S: String);
var
  FileData: AnsiString;
  UnicodeStr: string;
begin
  LoadStringFromFile( ExpandConstant(S), FileData );
  UnicodeStr := String(FileData);
  Log(UnicodeStr);
  StringChangeEx( UnicodeStr, '####_HOME_PATH_####', GetHomePath(), True );
  Log(UnicodeStr);
  SaveStringToFile( ExpandConstant(S), UnicodeStr, False );
end;

procedure WriteHomePaths(S: String);
var
  FileData: TArrayOfString;
  UnicodeStr: string;
  i: Integer;
begin
  LoadStringsFromFile( ExpandConstant(S), FileData );
  for i := 0 to GetArrayLength(FileData)-1 do begin
    StringChangeEx( FileData[i], '####_HOME_PATH_####', GetHomePath(), True );
    Log( FileData[i] );
  end;
  SaveStringsToFile( ExpandConstant(S), FileData, False );
end;
